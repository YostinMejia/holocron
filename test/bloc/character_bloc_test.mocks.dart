// Mocks generated by Mockito 5.4.4 from annotations
// in star_wars/test/bloc/character_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:star_wars/data/datasource/graphql_datasource.dart' as _i2;
import 'package:star_wars/data/datasource/isar_datasource.dart' as _i4;
import 'package:star_wars/data/datasource/rest_datasource.dart' as _i3;
import 'package:star_wars/data/models/character_model.dart' as _i7;
import 'package:star_wars/data/models/isar_character_model.dart' as _i8;
import 'package:star_wars/data/repositories/character_repository.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGraphQlDataSource_0 extends _i1.SmartFake
    implements _i2.GraphQlDataSource {
  _FakeGraphQlDataSource_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRESTDataSource_1 extends _i1.SmartFake
    implements _i3.RESTDataSource {
  _FakeRESTDataSource_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIsarDatasource_2 extends _i1.SmartFake
    implements _i4.IsarDatasource {
  _FakeIsarDatasource_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CharacterRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCharacterRepository extends _i1.Mock
    implements _i5.CharacterRepository {
  MockCharacterRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GraphQlDataSource get graphQlDataSource => (super.noSuchMethod(
        Invocation.getter(#graphQlDataSource),
        returnValue: _FakeGraphQlDataSource_0(
          this,
          Invocation.getter(#graphQlDataSource),
        ),
      ) as _i2.GraphQlDataSource);

  @override
  _i3.RESTDataSource get restDataSource => (super.noSuchMethod(
        Invocation.getter(#restDataSource),
        returnValue: _FakeRESTDataSource_1(
          this,
          Invocation.getter(#restDataSource),
        ),
      ) as _i3.RESTDataSource);

  @override
  _i4.IsarDatasource get isarDatasource => (super.noSuchMethod(
        Invocation.getter(#isarDatasource),
        returnValue: _FakeIsarDatasource_2(
          this,
          Invocation.getter(#isarDatasource),
        ),
      ) as _i4.IsarDatasource);

  @override
  _i6.Future<List<_i7.CharacterModel>> fetchCharacter([int? amount]) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchCharacter,
          [amount],
        ),
        returnValue:
            _i6.Future<List<_i7.CharacterModel>>.value(<_i7.CharacterModel>[]),
      ) as _i6.Future<List<_i7.CharacterModel>>);

  @override
  _i6.Future<List<_i8.IsarCharacterModel>> fetchLikedCharacters(
          String? emailUSer) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchLikedCharacters,
          [emailUSer],
        ),
        returnValue: _i6.Future<List<_i8.IsarCharacterModel>>.value(
            <_i8.IsarCharacterModel>[]),
      ) as _i6.Future<List<_i8.IsarCharacterModel>>);
}
